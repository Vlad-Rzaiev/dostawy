{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/time-functions.js","../src/js/mockapi.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["export const refs = {\n  deliveryForm: document.querySelector('.deliveries-form-js'),\n  deliveryNumber: document.querySelector('.delivery-no-number'),\n  deliveryNumberYear: document.querySelector('.delivery-no-year'),\n  deliveriesDate: document.querySelector('.deliveries-form-date-js'),\n  fullDeliveryNo: document.querySelector('.full-delivery-no-js'),\n  recipientName: document.querySelector('.recipient-name-user-login'),\n  userDeliveryDescr: document.querySelector('.delivery-descr-js'),\n  deleteDeliveryForm: document.querySelector('.delete-delivery-form-js'),\n  tableBody: document.querySelector('.deliveries-table-body'),\n  incShipID: document.querySelector('.inc-ship-id'),\n  updateDeliveryBtn: document.querySelector('.update-delivery-btn'),\n  updateDeliveryOverlay: document.querySelector('.update-delivery-overlay'),\n  modalWindowCloseBtn: document.querySelector('.modal-window-close-btn'),\n  tableBody: document.querySelector('.deliveries-table-body'),\n  deliveriesTime: document.querySelector('.deliveries-form-time-js'),\n  updateDeliverySelect: document.querySelector('.update-delivery-select-js'),\n  inputContainer: document.querySelector('.input-container'),\n  updateDeliveryForm: document.querySelector('.modal-update-delivery-form-js'),\n};\n","import { refs } from './refs';\n\nexport const getCurrentDate = () => {\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const day = String(currentDate.getDate()).padStart(2, '0');\n  const date = `${year}-${month}-${day}`;\n\n  return date;\n};\n\nexport const getCurrentTime = () => {\n  setInterval(() => {\n    const currentDate = new Date();\n    const hours = String(currentDate.getHours()).padStart(2, '0');\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\n\n    refs.deliveriesTime.textContent = `${hours}:${minutes}:${seconds}`;\n  }, 1000);\n};\n","import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst API_URL = 'https://6788090fc4a42c9161091efe.mockapi.io/deliveries';\n\nexport const addDelivery = userData => {\n  return axios\n    .post(API_URL, userData)\n    .then(() => {\n      iziToast.success({\n        title: 'Dodano dostawę!',\n        position: 'topRight',\n        timeout: 7000,\n      });\n    })\n    .catch(err => {\n      iziToast.error({\n        message: err,\n        position: 'topRight',\n        timeout: 7000,\n      });\n    });\n};\n\nexport const deleteDelivery = deliveryId => {\n  return axios\n    .delete(`${API_URL}/${deliveryId}`)\n    .then(response => {\n      iziToast.success({\n        message: 'Dostawa usunięta',\n        position: 'topRight',\n        timeout: 7000,\n      });\n      console.log(response);\n    })\n    .catch(err => {\n      iziToast.error({\n        message: err,\n        position: 'topRight',\n        timeout: 7000,\n      });\n    });\n};\n\nexport const getData = () => axios.get(API_URL);\n\nexport const updateData = (dataForUpdate, id) =>\n  axios\n    .put(`${API_URL}/${id}`, dataForUpdate)\n    .then(response => {\n      iziToast.success({\n        message: 'Korekta zrobiona',\n        position: 'topRight',\n        timeout: 7000,\n      });\n      console.log(response);\n    })\n    .catch(err => console.log(err));\n","import { refs } from './refs';\n\nexport const renderMarkup = deliveries => {\n  const markup = deliveries\n    .map(\n      delivery => `\n        <tr class=\"deliveries-table-body-row\">\n            <td class=\"deliveries-table-body-text\">${delivery.id}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.deliveryNumber}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.deliveryDescr}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.supplier}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.carrier}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.shipingNoteNumber}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.pallets}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.boxes}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.pieces}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.incomingShipmentID}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.admissionDate}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.admissionTime}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.recipientFullName}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.abroad}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.invoiceNumber}</td>\n            <td class=\"deliveries-table-body-text\">${delivery.comments}</td>\n        </tr>\n    `\n    )\n    .join('');\n\n  refs.tableBody.insertAdjacentHTML('beforeend', markup);\n};\n\nexport const createInputForUpdateDelivery = value => {\n  const inputEl = document.createElement('input');\n\n  inputEl.type = 'text';\n  inputEl.name = value;\n  inputEl.placeholder = `Wprowadź nowe dane`;\n  inputEl.className = 'deliveries-form-input';\n\n  refs.inputContainer.appendChild(inputEl);\n};\n","import 'font-awesome/css/font-awesome.min.css';\nimport { refs } from './js/refs.js';\nimport { getCurrentDate, getCurrentTime } from './js/time-functions.js';\nimport {\n  addDelivery,\n  deleteDelivery,\n  getData,\n  updateData,\n} from './js/mockapi.js';\nimport {\n  renderMarkup,\n  createInputForUpdateDelivery,\n} from './js/render-function.js';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  try {\n    const { data } = await getData();\n    renderMarkup(data);\n\n    const lastDeliveryNumber = data[data.length - 1].deliveryNumber;\n    const [lastNumber, year, suffix] = lastDeliveryNumber.split('/');\n    const newNumber = String(Number(lastNumber) + 1).padStart(4, '0');\n    refs.deliveryNumber.textContent = newNumber;\n  } catch (err) {\n    console.log(err);\n  }\n});\n\nrefs.deliveryNumberYear.textContent = new Date().getFullYear();\n\nrefs.deliveriesDate.textContent = `${getCurrentDate()}`;\ngetCurrentTime();\n\nrefs.userDeliveryDescr.addEventListener('input', () => {\n  const deliveryDescrValue = refs.userDeliveryDescr.value.trim().toUpperCase();\n\n  if (deliveryDescrValue.includes('TERMINALE_INGENICO_')) {\n    refs.incShipID.disabled = false;\n  }\n\n  if (deliveryDescrValue === 'TERMINALE_INGENICO_ZWROT') {\n    refs.incShipID.disabled = true;\n  }\n});\n\nconst onClickSubmitForm = async e => {\n  try {\n    e.preventDefault();\n\n    const userEntry = {\n      supplier: e.target.elements.supplier.value.trim().toLowerCase(),\n      abroad: e.target.elements.abroad.value.trim().toLowerCase(),\n      carrier: e.target.elements.carrier.value.trim().toLowerCase(),\n      deliveryNumber: refs.fullDeliveryNo.textContent.trim(),\n      deliveryDescr: e.target.elements['delivery-descr'].value\n        .trim()\n        .toLowerCase(),\n      incomingShipmentID: e.target.elements['incoming-shipment-id'].value,\n      pallets: e.target.elements.pallets.value,\n      boxes: e.target.elements.boxes.value,\n      pieces: e.target.elements.pieces.value,\n      shipingNoteNumber: e.target.elements['shiping-note-number'].value\n        .trim()\n        .toLowerCase(),\n      admissionDate: refs.deliveriesDate.textContent,\n      admissionTime: refs.deliveriesTime.textContent,\n      recipientFullName: refs.recipientName.textContent.toLowerCase(),\n      invoiceNumber: e.target.elements['invoice-num'].value\n        .trim()\n        .toLowerCase(),\n      comments: e.target.elements.comments.value.trim().toLowerCase(),\n    };\n\n    await addDelivery(userEntry);\n\n    const { data } = await getData();\n    const newID = Number(data[data.length - 1].id) + 1;\n\n    refs.deliveryNumber.textContent = String(newID).padStart(4, '0');\n\n    const arr = [];\n    arr.push(userEntry);\n    arr[0].id = newID - 1;\n    renderMarkup(arr);\n\n    refs.incShipID.disabled = true;\n\n    refs.deliveryForm.reset();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst onClickSubmitFormDelete = async e => {\n  try {\n    e.preventDefault();\n\n    const deleteID = e.target.elements['delivery-id'].value;\n    deleteDelivery(deleteID);\n\n    refs.tableBody.innerHTML = '';\n\n    const { data } = await getData();\n    renderMarkup(data);\n\n    refs.deleteDeliveryForm.reset();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst onSelectDeliveryField = e => {\n  const selectedValue = e.target.value;\n\n  createInputForUpdateDelivery(selectedValue);\n};\n\nconst onClickUpdateDeliverySubmit = async e => {\n  try {\n    e.preventDefault();\n\n    const formData = new FormData(e.target);\n    const submitedData = {};\n\n    formData.forEach((value, key) => {\n      submitedData[key] = value;\n    });\n\n    await updateData(submitedData, submitedData['update-delivery-id']);\n    refs.tableBody.innerHTML = '';\n\n    const { data } = await getData();\n    renderMarkup(data);\n\n    refs.updateDeliveryOverlay.classList.toggle('is-open');\n    refs.inputContainer.innerHTML = '';\n\n    refs.updateDeliveryForm.reset();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nrefs.deliveryForm.addEventListener('submit', onClickSubmitForm);\nrefs.deleteDeliveryForm.addEventListener('submit', onClickSubmitFormDelete);\n\nrefs.updateDeliveryBtn.addEventListener('click', () => {\n  refs.updateDeliveryOverlay.classList.toggle('is-open');\n});\nrefs.modalWindowCloseBtn.addEventListener('click', () => {\n  refs.updateDeliveryOverlay.classList.toggle('is-open');\n});\n\nrefs.updateDeliverySelect.addEventListener('change', onSelectDeliveryField);\nrefs.updateDeliveryForm.addEventListener('submit', onClickUpdateDeliverySubmit);\n"],"names":["refs","getCurrentDate","currentDate","year","month","day","getCurrentTime","hours","minutes","seconds","API_URL","addDelivery","userData","axios","iziToast","err","deleteDelivery","deliveryId","response","getData","updateData","dataForUpdate","id","renderMarkup","deliveries","markup","delivery","createInputForUpdateDelivery","value","inputEl","data","lastDeliveryNumber","lastNumber","suffix","newNumber","deliveryDescrValue","onClickSubmitForm","userEntry","newID","arr","onClickSubmitFormDelete","deleteID","onSelectDeliveryField","selectedValue","onClickUpdateDeliverySubmit","formData","submitedData","key"],"mappings":"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"}